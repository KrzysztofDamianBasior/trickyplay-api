plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
}

group = 'org.trickyplay'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

jar {
	enabled = false
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// OpenPDF
	// https://mvnrepository.com/artifact/com.github.librepdf/openpdf
	implementation group: 'com.github.librepdf', name: 'openpdf', version: '1.3.30'

	// Testcontainers
	testImplementation('org.springframework.boot:spring-boot-testcontainers')
	testImplementation('org.testcontainers:mysql')

	/*
	  JWTs
    */
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // or 'io.jsonwebtoken:jjwt-gson:JJWT_RELEASE_VERSION' for gson
	/*
      Uncomment this next dependency if you are using:
       - JDK 10 or earlier, and you want to use RSASSA-PSS (PS256, PS384, PS512) signature algorithms.
       - JDK 10 or earlier, and you want to use EdECDH (X25519 or X448) Elliptic Curve Diffie-Hellman encryption.
       - JDK 14 or earlier, ando you want to use EdDSA (Ed25519 or Ed448) Elliptic Curve signature algorithms.
      It is unnecessary for these algorithms on JDK 15 or later.
    */
	// runtimeOnly 'org.bouncycastle:bcprov-jdk15on:1.70'

//	implementation group: 'io.micrometer', name: 'micrometer-registry-prometheus'
//	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'

	// https://mvnrepository.com/artifact/io.micrometer/micrometer-registry-prometheus
	implementation 'io.micrometer:micrometer-registry-prometheus'

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
}

tasks.named('test') {
	useJUnitPlatform()
}
